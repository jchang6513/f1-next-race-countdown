import dayjs from 'dayjs';
import utc from 'dayjs/plugin/utc';
import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { useEffect, useState } from 'react';
import styles from '../styles/Home.module.css'

dayjs.extend(utc)

type Circuit = {
  circuitId: string;
  circuitName: string;
  Location: {
    lat: string;
    long: string;
    locality: string;
    country: string;
  };
};

type RaceDateTime = {
  date: string;
  time: string;
};

type Race = {
  round: string;
  raceName: string;
  Circuit: Circuit;
  date: string;
  time: string;
  FirstPractice: RaceDateTime;
  SecondPractice: RaceDateTime;
  ThirdPractice: RaceDateTime;
  Qualifying: RaceDateTime;
};

const localTime = (raceDateTime: RaceDateTime) => {
  return dayjs(`${raceDateTime.date} ${raceDateTime.time}`).utc().local().format('MM/DD HH:mm')
}

const useCountDown = (raceDateTime: RaceDateTime) => {
  const [countDown, setCountDown] = useState({
    day: 0, hours: 0, minutes: 0, seconds: 0,
  })

  const raceDay = dayjs(`${raceDateTime.date} ${raceDateTime.time}`);

  useEffect(() => {
    setTimeout(() => {
      const current = dayjs();

      setCountDown({
        day: raceDay.diff(current, 'days'),
        hours: raceDay.diff(current, 'hours') % 24,
        minutes: raceDay.diff(current, 'minutes') % 60,
        seconds: raceDay.diff(current, 'seconds') % 60,
      })
    }, 1000)
  }, [countDown, raceDay])

  return countDown
}

const Home: NextPage<{ races: Race[], nextRace: Race }> = ({ races, nextRace }) => {
  const countDown = useCountDown(nextRace)

  return (
    <div className={styles.container}>
      <Head>
        <title>F1 Next Race Countdown</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.raceName}>
          {nextRace.raceName}
        </h1>
        <div className={styles.title}>
          <h1 className={styles.circuitName}>
            {nextRace.Circuit.circuitName}
          </h1>
          <div className={styles.countdown}>
            <div className={styles.section}>
              <p>{String(countDown.day).padStart(2, '0')}</p>
              <p>DAYS</p>
            </div>
            <div className={styles.section}>
              <p>{String(countDown.hours).padStart(2, '0')}</p>
              <p>HRS</p>
            </div>
            <div className={styles.section}>
              <p>{String(countDown.minutes).padStart(2, '0')}</p>
              <p>MINS</p>
            </div>
            <div className={styles.section}>
              <p>{String(countDown.seconds).padStart(2, '0')}</p>
              <p>SECS</p>
            </div>
          </div>
        </div>
        <div className={styles.grid}>
          <div className={styles.card}>
            <h2>First Practice</h2>
            <p>{localTime(nextRace.FirstPractice)}</p>
          </div>
          <div className={styles.card}>
            <h2>Second Practice</h2>
            <p>{localTime(nextRace.SecondPractice)}</p>
          </div>
          <div className={styles.card}>
            <h2>Third Practice</h2>
            <p>{localTime(nextRace.ThirdPractice)}</p>
          </div>
          <div className={styles.card}>
            <h2>Qualifying</h2>
            <p>{localTime(nextRace.Qualifying)}</p>
          </div>
          <div className={styles.card}>
            <h2>Race</h2>
            <p>{localTime(nextRace)}</p>
          </div>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export async function getStaticProps() {
  // Call an external API endpoint to get posts
  const res = await fetch('https://ergast.com/api/f1/current.json')
  const races = (await res.json())?.MRData?.RaceTable?.Races as Race[]

  const currentDate = Number(new Date())
  const nextRace = races.find((race) => {
    const raceDate = Number(new Date(race.date))
    console.log(raceDate, currentDate)
    return raceDate > currentDate
  })

  return {
    props: {
      races,
      nextRace,
    },
  }
}

export default Home
